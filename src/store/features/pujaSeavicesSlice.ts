import { createSlice } from "@reduxjs/toolkit";

interface PujaServicesState {
  // pujaServices: PujaService[];
  // loading: boolean;
  // error: string | null;

  isOpenFilters: boolean;
  filters: {
    category?: string[];
    trending?: string[];
    tags?: string[];
    location?: string;
    priceRange?: [number, number];
    rating?: number;
    sortBy?: string;
    searchQuery?: string;
  };
}

// Define the initial state for the puja services slice
const initialState: PujaServicesState = {
  // pujaServices: [],
  // loading: false,
  // error: null,

  // pooja filters
  isOpenFilters: false,
  filters: {
    category: ["All Pujas"],
    trending: [],
    tags: [],
    searchQuery: "",
  },
};

// Create the puja services slice
export const pujaServicesSlice = createSlice({
  name: "pujaServices",
  initialState,
  reducers: {
    setIsOpenFilters: (state, action) => {
      state.isOpenFilters = action.payload;
    },

    setCategoryFilter: (state, action: { payload: string }) => {
      if (state.filters?.category?.includes(action.payload)) {
        state.filters.category = state.filters.category.filter(
          (category) => category !== action.payload
        );
      } else {
        state.filters.category = state.filters.category || [];
        state.filters.category.push(action.payload);
      }
    },

    setTrendingFilter: (state, action: { payload: string }) => {
      if (state.filters?.trending?.includes(action.payload)) {
        state.filters.trending = state.filters.trending.filter(
          (trending) => trending !== action.payload
        );
      } else {
        state.filters.trending = state.filters.trending || [];
        state.filters.trending.push(action.payload);
      }
    },

    setFilters: (state, action) => {
      state.filters = { ...state.filters, ...action.payload };
    },

    resetFilters: (state) => {
      state.filters = {};
    },
  },
});

// Export the actions generated by the slice
export const {
  setIsOpenFilters,
  setFilters,
  resetFilters,
  setCategoryFilter,
  setTrendingFilter,
} = pujaServicesSlice.actions;
